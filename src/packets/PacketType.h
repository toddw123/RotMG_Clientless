#pragma once

#ifndef PACKETTYPE_H
#define PACKETTYPE_H

//#include "../utilities/EnumToString.h"
#include <unordered_map>

typedef enum tagPacketType
{
    FAILURE,
	CREATE_SUCCESS,
	CREATE,
	PLAYERSHOOT,
	MOVE,
	PLAYERTEXT,
	TEXT,
	SERVERPLAYERSHOOT,
	DAMAGE,
	UPDATE,
	UPDATEACK,
	NOTIFICATION,
	NEWTICK,
	INVSWAP,
	USEITEM,
	SHOWEFFECT,
	HELLO,
	GOTO,
	INVDROP,
	INVRESULT,
	RECONNECT,
	PING,
	PONG,
	MAPINFO,
	LOAD,
	PIC,
	SETCONDITION,
	TELEPORT,
	USEPORTAL,
	DEATH,
	BUY,
	BUYRESULT,
	AOE,
	GROUNDDAMAGE,
	PLAYERHIT,
	ENEMYHIT,
	AOEACK,
	SHOOTACK,
	OTHERHIT,
	SQUAREHIT,
	GOTOACK,
	EDITACCOUNTLIST,
	ACCOUNTLIST,
	QUESTOBJID,
	CHOOSENAME,
	NAMERESULT,
	CREATEGUILD,
	GUILDRESULT,
	GUILDREMOVE,
	GUILDINVITE,
	ALLYSHOOT,
	ENEMYSHOOT,
	REQUESTTRADE,
	TRADEREQUESTED,
	TRADESTART,
	CHANGETRADE,
	TRADECHANGED,
	ACCEPTTRADE,
	CANCELTRADE,
	TRADEDONE,
	TRADEACCEPTED,
	CLIENTSTAT,
	CHECKCREDITS,
	ESCAPE,
	FILE_PACKET,
	INVITEDTOGUILD,
	JOINGUILD,
	CHANGEGUILDRANK,
	PLAYSOUND,
	GLOBAL_NOTIFICATION,
	RESKIN,
	PETUPGRADEREQUEST,
	ACTIVE_PET_UPDATE_REQUEST,
	ACTIVEPETUPDATE,
	NEW_ABILITY,
	PETYARDUPDATE,
	EVOLVE_PET,
	DELETE_PET,
	HATCH_PET,
	ENTER_ARENA,
	IMMINENT_ARENA_WAVE,
	ARENA_DEATH,
	ACCEPT_ARENA_DEATH,
	VERIFY_EMAIL,
	RESKIN_UNLOCK,
	PASSWORD_PROMPT,
	QUEST_FETCH_ASK,
	QUEST_REDEEM,
	QUEST_FETCH_RESPONSE,
	QUEST_REDEEM_RESPONSE,
	PET_CHANGE_FORM_MSG,
	KEY_INFO_REQUEST,
	KEY_INFO_RESPONSE,
	CLAIM_LOGIN_REWARD_MSG,
	LOGIN_REWARD_MSG,
	QUEST_ROOM_MSG,
	UNKNOWN
} PacketType;

char const* GetStringPacketType(enum tagPacketType index);

static char const* gs_PacketType[] = 
{
	"FAILURE",
	"CREATE_SUCCESS",
	"CREATE",
	"PLAYERSHOOT",
	"MOVE",
	"PLAYERTEXT",
	"TEXT",
	"SERVERPLAYERSHOOT",
	"DAMAGE",
	"UPDATE",
	"UPDATEACK",
	"NOTIFICATION",
	"NEWTICK",
	"INVSWAP",
	"USEITEM",
	"SHOWEFFECT",
	"HELLO",
	"GOTO",
	"INVDROP",
	"INVRESULT",
	"RECONNECT",
	"PING",
	"PONG",
	"MAPINFO",
	"LOAD",
	"PIC",
	"SETCONDITION",
	"TELEPORT",
	"USEPORTAL",
	"DEATH",
	"BUY",
	"BUYRESULT",
	"AOE",
	"GROUNDDAMAGE",
	"PLAYERHIT",
	"ENEMYHIT",
	"AOEACK",
	"SHOOTACK",
	"OTHERHIT",
	"SQUAREHIT",
	"GOTOACK",
	"EDITACCOUNTLIST",
	"ACCOUNTLIST",
	"QUESTOBJID",
	"CHOOSENAME",
	"NAMERESULT",
	"CREATEGUILD",
	"GUILDRESULT",
	"GUILDREMOVE",
	"GUILDINVITE",
	"ALLYSHOOT",
	"ENEMYSHOOT",
	"REQUESTTRADE",
	"TRADEREQUESTED",
	"TRADESTART",
	"CHANGETRADE",
	"TRADECHANGED",
	"ACCEPTTRADE",
	"CANCELTRADE",
	"TRADEDONE",
	"TRADEACCEPTED",
	"CLIENTSTAT",
	"CHECKCREDITS",
	"ESCAPE",
	"FILE_PACKET",
	"INVITEDTOGUILD",
	"JOINGUILD",
	"CHANGEGUILDRANK",
	"PLAYSOUND",
	"GLOBAL_NOTIFICATION",
	"RESKIN",
	"PETUPGRADEREQUEST",
	"ACTIVE_PET_UPDATE_REQUEST",
	"ACTIVEPETUPDATE",
	"NEW_ABILITY",
	"PETYARDUPDATE",
	"EVOLVE_PET",
	"DELETE_PET",
	"HATCH_PET",
	"ENTER_ARENA",
	"IMMINENT_ARENA_WAVE",
	"ARENA_DEATH",
	"ACCEPT_ARENA_DEATH",
	"VERIFY_EMAIL",
	"RESKIN_UNLOCK",
	"PASSWORD_PROMPT",
	"QUEST_FETCH_ASK",
	"QUEST_REDEEM",
	"QUEST_FETCH_RESPONSE",
	"QUEST_REDEEM_RESPONSE",
	"PET_CHANGE_FORM_MSG",
	"KEY_INFO_REQUEST",
	"KEY_INFO_RESPONSE",
	"CLAIM_LOGIN_REWARD_MSG",
	"LOGIN_REWARD_MSG",
	"QUEST_ROOM_MSG",
	"UNKNOWN"
};

///////////////////////////////
// The enum declaration
///////////////////////////////
// BEGIN_ENUM(PacketType)
// {
// 	DEFINE_ENUM(FAILURE),
// 	DEFINE_ENUM(CREATE_SUCCESS),
// 	DEFINE_ENUM(CREATE),
// 	DEFINE_ENUM(PLAYERSHOOT),
// 	DEFINE_ENUM(MOVE),
// 	DEFINE_ENUM(PLAYERTEXT),
// 	DEFINE_ENUM(TEXT),
// 	DEFINE_ENUM(SERVERPLAYERSHOOT),
// 	DEFINE_ENUM(DAMAGE),
// 	DEFINE_ENUM(UPDATE),
// 	DEFINE_ENUM(UPDATEACK),
// 	DEFINE_ENUM(NOTIFICATION),
// 	DEFINE_ENUM(NEWTICK),
// 	DEFINE_ENUM(INVSWAP),
// 	DEFINE_ENUM(USEITEM),
// 	DEFINE_ENUM(SHOWEFFECT),
// 	DEFINE_ENUM(HELLO),
// 	DEFINE_ENUM(GOTO),
// 	DEFINE_ENUM(INVDROP),
// 	DEFINE_ENUM(INVRESULT),
// 	DEFINE_ENUM(RECONNECT),
// 	DEFINE_ENUM(PING),
// 	DEFINE_ENUM(PONG),
// 	DEFINE_ENUM(MAPINFO),
// 	DEFINE_ENUM(LOAD),
// 	DEFINE_ENUM(PIC),
// 	DEFINE_ENUM(SETCONDITION),
// 	DEFINE_ENUM(TELEPORT),
// 	DEFINE_ENUM(USEPORTAL),
// 	DEFINE_ENUM(DEATH),
// 	DEFINE_ENUM(BUY),
// 	DEFINE_ENUM(BUYRESULT),
// 	DEFINE_ENUM(AOE),
// 	DEFINE_ENUM(GROUNDDAMAGE),
// 	DEFINE_ENUM(PLAYERHIT),
// 	DEFINE_ENUM(ENEMYHIT),
// 	DEFINE_ENUM(AOEACK),
// 	DEFINE_ENUM(SHOOTACK),
// 	DEFINE_ENUM(OTHERHIT),
// 	DEFINE_ENUM(SQUAREHIT),
// 	DEFINE_ENUM(GOTOACK),
// 	DEFINE_ENUM(EDITACCOUNTLIST),
// 	DEFINE_ENUM(ACCOUNTLIST),
// 	DEFINE_ENUM(QUESTOBJID),
// 	DEFINE_ENUM(CHOOSENAME),
// 	DEFINE_ENUM(NAMERESULT),
// 	DEFINE_ENUM(CREATEGUILD),
// 	DEFINE_ENUM(GUILDRESULT),
// 	DEFINE_ENUM(GUILDREMOVE),
// 	DEFINE_ENUM(GUILDINVITE),
// 	DEFINE_ENUM(ALLYSHOOT),
// 	DEFINE_ENUM(ENEMYSHOOT),
// 	DEFINE_ENUM(REQUESTTRADE),
// 	DEFINE_ENUM(TRADEREQUESTED),
// 	DEFINE_ENUM(TRADESTART),
// 	DEFINE_ENUM(CHANGETRADE),
// 	DEFINE_ENUM(TRADECHANGED),
// 	DEFINE_ENUM(ACCEPTTRADE),
// 	DEFINE_ENUM(CANCELTRADE),
// 	DEFINE_ENUM(TRADEDONE),
// 	DEFINE_ENUM(TRADEACCEPTED),
// 	DEFINE_ENUM(CLIENTSTAT),
// 	DEFINE_ENUM(CHECKCREDITS),
// 	DEFINE_ENUM(ESCAPE),
// 	DEFINE_ENUM(FILE_PACKET),
// 	DEFINE_ENUM(INVITEDTOGUILD),
// 	DEFINE_ENUM(JOINGUILD),
// 	DEFINE_ENUM(CHANGEGUILDRANK),
// 	DEFINE_ENUM(PLAYSOUND),
// 	DEFINE_ENUM(GLOBAL_NOTIFICATION),
// 	DEFINE_ENUM(RESKIN),
// 	DEFINE_ENUM(PETUPGRADEREQUEST),
// 	DEFINE_ENUM(ACTIVE_PET_UPDATE_REQUEST),
// 	DEFINE_ENUM(ACTIVEPETUPDATE),
// 	DEFINE_ENUM(NEW_ABILITY),
// 	DEFINE_ENUM(PETYARDUPDATE),
// 	DEFINE_ENUM(EVOLVE_PET),
// 	DEFINE_ENUM(DELETE_PET),
// 	DEFINE_ENUM(HATCH_PET),
// 	DEFINE_ENUM(ENTER_ARENA),
// 	DEFINE_ENUM(IMMINENT_ARENA_WAVE),
// 	DEFINE_ENUM(ARENA_DEATH),
// 	DEFINE_ENUM(ACCEPT_ARENA_DEATH),
// 	DEFINE_ENUM(VERIFY_EMAIL),
// 	DEFINE_ENUM(RESKIN_UNLOCK),
// 	DEFINE_ENUM(PASSWORD_PROMPT),
// 	DEFINE_ENUM(QUEST_FETCH_ASK),
// 	DEFINE_ENUM(QUEST_REDEEM),
// 	DEFINE_ENUM(QUEST_FETCH_RESPONSE),
// 	DEFINE_ENUM(QUEST_REDEEM_RESPONSE),
// 	DEFINE_ENUM(PET_CHANGE_FORM_MSG),
// 	DEFINE_ENUM(KEY_INFO_REQUEST),
// 	DEFINE_ENUM(KEY_INFO_RESPONSE),
// 	DEFINE_ENUM(CLAIM_LOGIN_REWARD_MSG),
// 	DEFINE_ENUM(LOGIN_REWARD_MSG),
// 	DEFINE_ENUM(QUEST_ROOM_MSG),
// 	DEFINE_ENUM(UNKNOWN)
// }
// END_ENUM(PacketType)

//#endif // (!defined(PTYPES_H) || defined(GENERATE_ENUM_STRINGS))
#endif